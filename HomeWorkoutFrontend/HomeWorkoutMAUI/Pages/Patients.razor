@using HomeWorkoutModels.Models;
@using Newtonsoft.Json;
@inject PatientService PatientService
@inject NavigationManager NavManager;
@page "/patients"

<GridRow Type="flex" Justify="center">
    <Space Size="@size" Direction="DirectionVHType.Vertical" Align="center">
        @if (patientList != null && patientList.Count > 0)
        {
            <SpaceItem>
                <Text Strong>
                    Select patient to add personalized homework
                </Text>
            </SpaceItem>
 
            <AntList Style="width:200px" DataSource="@patientList" TItem="UserBasicDetail" Split=true>
                <ListItem OnClick="()=>ItemClick(context.Id)">
                    <ListItemMeta AvatarTemplate="avatar" Description=@context.Email>
                        <TitleTemplate>
                           @($"{context.Name} {context.Surname}")
                        </TitleTemplate>
                    </ListItemMeta>
                </ListItem>
            </AntList>           
        }        
        else
        {
            <SpaceItem>
                <Text Strong>
                    No patients associated with this user
                </Text>
            </SpaceItem>
        }     
    </Space>
</GridRow>

@code {
    private List<UserBasicDetail> patientList;
    private string size = "large";
    RenderFragment avatar = @<Avatar Src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png"></Avatar>;
    public UserBasicDetail UserBasicDetail { get; set; }
   

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => PreparePatients());
    }

    private async Task PreparePatients()
    {
        patientList = new List<UserBasicDetail>();
        string userDetailsStr = await SecureStorage.GetAsync(nameof(Setting.UserBasicDetail));
        var userBasicDetail = JsonConvert.DeserializeObject<UserBasicDetail>(userDetailsStr);

        if (userBasicDetail != null)
        {
            patientList = PatientService.GetPatients(userBasicDetail.Id);
        }
    }

    public void ItemClick(string id)
    {
        NavManager.NavigateTo($"/addSequence/{id}");
    }
}

