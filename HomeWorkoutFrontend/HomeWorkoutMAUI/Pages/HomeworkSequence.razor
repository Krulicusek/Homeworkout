@using HomeWorkoutModels.Models;
@using Newtonsoft.Json;
@using SharedUILibrary.Components
@inject HomeworkSequenceService HomeWorkSequenceService
@inject ExerciseService ExerciseService
@page "/homeworkSequence"
<GridRow Type="flex" Justify="center">
    <Space Size="@size" Direction="DirectionVHType.Vertical">
        @if (homeworkSequenceModel != null && exerciseList.Count > 0)
        {
            <SpaceItem>
                <Row>
                    <p>
                        @($"Sequence estimated time: {homeworkSequenceModel.EstimatedTimeInMinutes} minutes")
                    </p>
                </Row>
            </SpaceItem>
            @foreach (var exercise in exerciseList)
            {
                <GridCol>
                    <SpaceItem>
                        <Card Style="width:300px" Title="@exercise.Name">
                            <Body>
                                <Space Size="@size" Direction="DirectionVHType.Vertical">
                                    <SpaceItem>
                                        <Image Src="@exercise.ImageSource" Width="250px" />
                                    </SpaceItem>
                                    <SpaceItem>
                                        <Descriptions>
                                            <DescriptionsItem Title="Seconds">
                                                @(
                                                    homeworkSequenceModel
                                                    .HomeworkICollection
                                                    .Single(x => x.ExerciseModelId == exercise.Id)
                                                    .Seconds
                                                    )
                                            </DescriptionsItem>
                                            <DescriptionsItem Title="NumberOfTimes">
                                                @(
                                                    homeworkSequenceModel
                                                    .HomeworkICollection
                                                    .Single(x => x.ExerciseModelId == exercise.Id)
                                                    .NumberOfTimes
                                                    )
                                            </DescriptionsItem>
                                        </Descriptions>
                                    </SpaceItem>
                                    <SpaceItem>
                                        <Button OnClick="()=> StartStopwatch(exercise)">Start exercise</Button>
                                    </SpaceItem>
                                </Space>
                            </Body>
                            <Extra>
                                <a>More</a>
                            </Extra>
                        </Card>
                    </SpaceItem>
                </GridCol>
            }
        }
        <Modal Title="Stopwatch"
               Visible="@_visible"            
               OnCancel="@HandleCancel"
                Footer=null>               
            <Stopwatch IsStarted=isStarted Counter=counter>
            </Stopwatch>
        </Modal>
    </Space>
</GridRow>

@code {
    private string size = "large";
    private HomeworkSequenceModel homeworkSequenceModel;
    private List<ExerciseModel> exerciseList = new List<ExerciseModel>();
    private bool isStarted = false;
    private int counter;
    bool _visible = false;


    private void HandleCancel(MouseEventArgs e)
    {
        _visible = false;
        isStarted = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => PrepareHomeWorkoutSequenceModel());
    }

    private async Task PrepareHomeWorkoutSequenceModel()
    {
        string userDetailsStr = await SecureStorage.GetAsync(nameof(Setting.UserBasicDetail));
        UserBasicDetail userBasicDetail = JsonConvert.DeserializeObject<UserBasicDetail>(userDetailsStr);
        if (userBasicDetail != null)
        {
            homeworkSequenceModel = HomeWorkSequenceService.GetHomeworkSequence(userBasicDetail.Id);
        }

        if (homeworkSequenceModel != null)
        {
            foreach (var homework in homeworkSequenceModel.HomeworkICollection)
            {
                exerciseList.Add(ExerciseService.GetExerciseModel(homework.ExerciseModelId));
            }
        }
    }
    private void StartStopwatch(ExerciseModel exercise)
    {
        isStarted = true;
        counter = homeworkSequenceModel.HomeworkICollection.Single(x => x.ExerciseModelId == exercise.Id).Seconds;
        _visible = true;
    }

}
