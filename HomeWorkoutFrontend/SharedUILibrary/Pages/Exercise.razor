@inject ExerciseService ExerciseService
@inject ExerciseService ExerciseService
@inject NavigationManager navigationManager

<GridRow Type="flex" Justify="center">

    <Space Size="@size" Direction="DirectionVHType.Vertical">
        @if (exerciseList != null)
        {
            @foreach (ExerciseModel exercise in exerciseList)
            {
                <GridCol>
                    <SpaceItem>
                        <Card Style="width:300px" Title="@exercise.Name">
                            <Body>
                                <Space Size="@size" Direction="DirectionVHType.Vertical">
                                    <SpaceItem>
                                        <Image Src="@exercise.ImageSource" Width="250px" />
                                    </SpaceItem>
                                    <SpaceItem>
                                        <CardMeta Description="@exercise.Description" />
                                    </SpaceItem>
                                </Space>
                            </Body>
                            <Extra>
                                <Button OnClick="() =>Edit(exercise.Id)">Edit </Button>
                                @*<button @onclick= "() =>Delete(exercise.Id)">Delete </button>*@
                            </Extra>
                        </Card>
                    </SpaceItem>
                </GridCol>
            }
        }
    </Space>
</GridRow>
<Button OnClick="() =>Add()">Add exercise</Button>

@code {
    private string size = "large";
    private List<ExerciseModel> exerciseList;

    protected override async Task OnInitializedAsync()
    {
        exerciseList = ExerciseService.GetExerciseModels();
    }

    private void Edit(int id)
    {
        navigationManager.NavigateTo($"/edit/{id}");
    }
    //private void Delete(int id)
    //{
    //    navigationManager.NavigateTo("/delete");
    //}
    private void Add()
    {
        navigationManager.NavigateTo($"/add");
    }
}
